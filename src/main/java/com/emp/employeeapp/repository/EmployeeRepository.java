package com.emp.employeeapp.repository;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.PreparedStatementCreator;
import org.springframework.jdbc.support.GeneratedKeyHolder;
import org.springframework.jdbc.support.KeyHolder;
import org.springframework.stereotype.Repository;

import com.emp.employeeapp.entity.Employee;

import jakarta.transaction.Transactional;

@Repository
public class EmployeeRepository {
	
	/* defined jdbctemplate object
	 put autowired annotion
	when,spring boot starts it creates jdbc object
	*/
	@Autowired
	private JdbcTemplate jdbcTemplate;
	
	//method - to accept employee object
	
	
	@Transactional
	public Employee createEmployee(Employee employee) {
		// sql query to insert employee record to employeetable
		String sql = "INSERT INTO EMPLOYEE " + "(NAME,AGE,SALARY) VALUES(?,?,?)";
		KeyHolder holder = new GeneratedKeyHolder();
		/* update method of jdbctemplate object
		inserting employee object to employeetable
		*/
		jdbcTemplate.update(new PreparedStatementCreator() {
			
			@Override
			public PreparedStatement createPreparedStatement(Connection con) throws SQLException {
				
				PreparedStatement ps = con.prepareStatement(sql,
						    Statement.RETURN_GENERATED_KEYS);
				ps.setString(1, employee.getName());
				ps.setInt(2, employee.getAge());
				ps.setInt(3, employee.getSalary());
				return ps;			}
		},holder);
		// autogenerated primary key capturing here
		int generatedEmployeeId = holder.getKey().intValue();
		employee.setId(generatedEmployeeId);
		return employee;
		
		
		
	}
	

}
